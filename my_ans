1. git pull копирует данные из удаленного источника и заменяет предыдущие локальные данные, автоматически сливая изменения в текущую ветку

2. git fetch копирует данные из удаленного источника, но не заменяет локальные данные и сохраняет их в каталог refs/remotes/

2a. модели ветвления Git: Git Flow (main, develop, feature, release, hotfix), GitHub Flow (main, feature), GitLab Flow (production, pre-production, master, feature), Trunk-Based Development (main/trunk, короткие feature ветки)

3. soft link - это символическая ссылка, которая указывает на имя файла или путь, hard link - это жесткая ссылка, которая указывает на inode файла

4. при удалении оригинала soft link становится битой, hard link остается доступным

5. hard link не может ссылаться на директории и работает только в пределах одной файловой системы

6. ping - это команда для проверки доступности по ICMP протоколу, telnet - это команда для проверки доступности по TCP протоколу, nc - это команда для проверки доступности по TCP и UDP протоколам, nmap - для сканирования портов, traceroute - для трассировки маршрута

7. виртуальная машина - это программа, которая эмулирует компьютер с собственной ОС, контейнер - это изолированный процесс, который использует ядро хоста, на каждой виртуальной машине нужно устанавливать свою ОС

7a. компоненты Linux для контейнеризации: namespaces (pid, net, mnt, uts, ipc, user) для изоляции ресурсов, cgroups для ограничения ресурсов, Union File System (OverlayFS, AUFS) для слоистой файловой системы, SELinux/AppArmor для безопасности

8. архитектура Docker включает: Docker Daemon (dockerd) - фоновый процесс управления, Docker Client (docker) - CLI интерфейс, Docker Registry - хранилище образов, Docker Images - шаблоны контейнеров со слоистой структурой, Docker Containers - запущенные экземпляры образов, Docker Networks - изоляция сетевого трафика через bridge, host, none и overlay типы

9. образ контейнера состоит из слоев, где каждая инструкция в Dockerfile создает отдельный слой, слои кэшируются и переиспользуются

9a. оптимизация Docker: копировать package.json сначала, затем RUN npm install, потом COPY . . для кэширования зависимостей и быстрой сборки

10. pod - это наименьшая единица развертывания, представляющая группу контейнеров с общими ресурсами, общей сетью с одним IP адресом, общими томами и переменными окружения

11. JOIN - это команда для соединения таблиц в SQL. INNER JOIN возвращает только совпадающие записи из обеих таблиц, LEFT JOIN возвращает все записи из левой таблицы и совпадающие из правой, RIGHT JOIN возвращает все записи из правой таблицы и совпадающие из левой, FULL OUTER JOIN возвращает все записи из обеих таблиц с NULL для отсутствующих совпадений

12. WHERE - это команда для фильтрации строк до группировки, HAVING - это команда для фильтрации групп после группировки, WHERE работает с отдельными записями, HAVING - с результатами GROUP BY   